package com.amap.api.location.core;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Build;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Display;
import android.view.WindowManager;
import com.aps.t;
import java.util.HashMap;

public class c
{
  static String a;
  static HashMap<String, String> b = new HashMap();
  private static c c = null;
  private static String d = null;
  private static String e = "http://apilocate.amap.com/mobile/binary";
  private static String f = "http://abroad.apilocate.amap.com/mobile/binary";
  private static Context g = null;
  private static TelephonyManager h;
  private static ConnectivityManager i;
  private static String j;
  private static String k;
  private static String l;
  private static String m;
  private static String n;
  private static String o;
  
  static
  {
    a = "";
    o = "";
  }
  
  public static c a(Context paramContext)
  {
    if (c != null) {}
    for (;;)
    {
      return c;
      try
      {
        c = new c();
        g = paramContext;
        h = (TelephonyManager)g.getSystemService("phone");
        i = (ConnectivityManager)g.getSystemService("connectivity");
        j = g.getApplicationContext().getPackageName();
        l = k();
        m = g();
        n = h();
        a = b(g);
        k = d(paramContext);
        if (t.a(c(paramContext))) {
          break label137;
        }
        l();
        o = e.a(a);
        c(o);
      }
      catch (Throwable paramContext)
      {
        paramContext.printStackTrace();
      }
      continue;
      label137:
      e = f;
    }
  }
  
  public static String a()
  {
    return a;
  }
  
  public static boolean a(double paramDouble1, double paramDouble2)
  {
    int i1 = (int)((paramDouble2 - 73.0D) / 0.5D);
    int i2 = (int)((paramDouble1 - 3.5D) / 0.5D);
    if (i2 < 0) {}
    while ((i2 >= 101) || (i1 < 0) || (i1 >= 124)) {
      return false;
    }
    try
    {
      icharAt(i1 + i2 * 124);
      return i1 == 49;
    }
    catch (Throwable localThrowable)
    {
      localThrowable.printStackTrace();
    }
    return true;
  }
  
  public static String b()
  {
    return j;
  }
  
  public static String b(Context paramContext)
  {
    if (a == null) {}
    try
    {
      a = paramContext.getPackageManager().getApplicationInfo(paramContext.getPackageName(), 128).metaData.getString("com.amap.api.v2.apikey");
      for (;;)
      {
        return a;
        if (a.equals("")) {
          break;
        }
      }
    }
    catch (Throwable paramContext)
    {
      for (;;)
      {
        Log.e("AuthLocation", "key鉴权失败");
      }
    }
  }
  
  public static String c(Context paramContext)
  {
    try
    {
      paramContext = (TelephonyManager)paramContext.getSystemService("phone");
      if (paramContext == null) {
        return "";
      }
      try
      {
        paramContext = paramContext.getNetworkOperator();
        if ((paramContext != null) && (paramContext.length() >= 3)) {
          paramContext = paramContext.substring(0, 3);
        }
      }
      catch (Throwable paramContext)
      {
        paramContext.printStackTrace();
        return "";
      }
      paramContext = "";
    }
    catch (Throwable paramContext)
    {
      paramContext.printStackTrace();
      return "";
    }
    return paramContext;
  }
  
  private static void c(String paramString)
  {
    if (paramString == null) {
      return;
    }
    label89:
    do
    {
      try
      {
        if (paramString.length() == 0) {
          break;
        }
        if (b == null) {
          break label96;
        }
        if (!b.containsKey(paramString)) {
          return;
        }
        String str = (String)b.get(paramString);
        if ((str == null) || (str.length() <= 0)) {
          break label89;
        }
        paramString = e.a(str, paramString);
      }
      catch (Throwable paramString)
      {
        paramString.printStackTrace();
        return;
      }
      if ((paramString.length() <= 0) || (!paramString.contains("http:"))) {
        break label95;
      }
      e = paramString;
      return;
      paramString = null;
    } while (paramString != null);
    label95:
    return;
    label96:
    return;
  }
  
  public static String d()
  {
    return Build.VERSION.RELEASE;
  }
  
  /* Error */
  public static String d(Context paramContext)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_1
    //   2: aload_0
    //   3: invokevirtual 147	android/content/Context:getPackageManager	()Landroid/content/pm/PackageManager;
    //   6: aload_0
    //   7: invokevirtual 87	android/content/Context:getPackageName	()Ljava/lang/String;
    //   10: bipush 64
    //   12: invokevirtual 219	android/content/pm/PackageManager:getPackageInfo	(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
    //   15: getfield 225	android/content/pm/PackageInfo:signatures	[Landroid/content/pm/Signature;
    //   18: iconst_0
    //   19: aaload
    //   20: invokevirtual 231	android/content/pm/Signature:toByteArray	()[B
    //   23: astore_0
    //   24: ldc -23
    //   26: invokestatic 239	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   29: aload_0
    //   30: invokevirtual 243	java/security/MessageDigest:digest	([B)[B
    //   33: astore_0
    //   34: new 245	java/lang/StringBuffer
    //   37: dup
    //   38: invokespecial 246	java/lang/StringBuffer:<init>	()V
    //   41: astore_2
    //   42: iload_1
    //   43: aload_0
    //   44: arraylength
    //   45: if_icmplt +8 -> 53
    //   48: aload_2
    //   49: invokevirtual 249	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   52: areturn
    //   53: aload_0
    //   54: iload_1
    //   55: baload
    //   56: sipush 255
    //   59: iand
    //   60: invokestatic 255	java/lang/Integer:toHexString	(I)Ljava/lang/String;
    //   63: getstatic 261	java/util/Locale:US	Ljava/util/Locale;
    //   66: invokevirtual 265	java/lang/String:toUpperCase	(Ljava/util/Locale;)Ljava/lang/String;
    //   69: astore_3
    //   70: aload_3
    //   71: invokevirtual 186	java/lang/String:length	()I
    //   74: iconst_1
    //   75: if_icmpeq +24 -> 99
    //   78: aload_2
    //   79: aload_3
    //   80: invokevirtual 269	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   83: pop
    //   84: aload_2
    //   85: ldc_w 271
    //   88: invokevirtual 269	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   91: pop
    //   92: iload_1
    //   93: iconst_1
    //   94: iadd
    //   95: istore_1
    //   96: goto -54 -> 42
    //   99: aload_2
    //   100: ldc_w 273
    //   103: invokevirtual 269	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   106: pop
    //   107: goto -29 -> 78
    //   110: astore_0
    //   111: aload_0
    //   112: invokevirtual 274	android/content/pm/PackageManager$NameNotFoundException:printStackTrace	()V
    //   115: aconst_null
    //   116: areturn
    //   117: astore_0
    //   118: aload_0
    //   119: invokevirtual 275	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   122: goto -7 -> 115
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	125	0	paramContext	Context
    //   1	95	1	i1	int
    //   41	59	2	localStringBuffer	StringBuffer
    //   69	11	3	str	String
    // Exception table:
    //   from	to	target	type
    //   2	42	110	android/content/pm/PackageManager$NameNotFoundException
    //   42	53	110	android/content/pm/PackageManager$NameNotFoundException
    //   53	78	110	android/content/pm/PackageManager$NameNotFoundException
    //   78	92	110	android/content/pm/PackageManager$NameNotFoundException
    //   99	107	110	android/content/pm/PackageManager$NameNotFoundException
    //   2	42	117	java/security/NoSuchAlgorithmException
    //   42	53	117	java/security/NoSuchAlgorithmException
    //   53	78	117	java/security/NoSuchAlgorithmException
    //   78	92	117	java/security/NoSuchAlgorithmException
    //   99	107	117	java/security/NoSuchAlgorithmException
  }
  
  public static String e()
  {
    return Build.MODEL;
  }
  
  public static String g()
  {
    try
    {
      Object localObject = g.getPackageManager();
      localObject = (String)((PackageManager)localObject).getApplicationLabel(((PackageManager)localObject).getApplicationInfo(g.getPackageName(), 0));
      return (String)localObject;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      localNameNotFoundException.printStackTrace();
    }
    return "";
  }
  
  public static String h()
  {
    Object localObject = g.getPackageManager();
    try
    {
      localObject = ((PackageManager)localObject).getPackageInfo(g.getPackageName(), 0).versionName;
      return (String)localObject;
    }
    catch (PackageManager.NameNotFoundException localNameNotFoundException)
    {
      localNameNotFoundException.printStackTrace();
    }
    return "";
  }
  
  public static String j()
  {
    return e;
  }
  
  private static String k()
  {
    Object localObject = new DisplayMetrics();
    ((WindowManager)g.getSystemService("window")).getDefaultDisplay().getMetrics((DisplayMetrics)localObject);
    int i1 = ((DisplayMetrics)localObject).widthPixels;
    int i2 = ((DisplayMetrics)localObject).heightPixels;
    if (i2 <= i1) {}
    for (localObject = i2 + "*" + i1;; localObject = i1 + "*" + i2)
    {
      l = (String)localObject;
      return l;
    }
  }
  
  private static void l()
  {
    try
    {
      if (b != null) {}
      for (;;)
      {
        b.clear();
        b.put("a9a9d23668a1a7ea93de9b21d67e436a", "0151A2608A672882D5CF273660580953A9D5A7F787F6E0DE4AFAF5C4950A3957D8765EF79F885FFFDC4DC17DB726827514A96E4D8EE1B621F3188265766F41D7");
        b.put("fe643c382e5c3b3962141f1a2e815a78", "F1721D9E2EC066558986B60084D0A9124FA354CD62DFA34F4B4512D920CF5615529C1DFB4E1757CADCEEA1CC4504F37F");
        b.put("b2e8bd171989cb2c3c13bd89b4c1067a", "E9FD1623CA093DE6FC8EF95553A10FD156A2992AFE89A29927491E24ACE42759650D6EF3A8F46CA4BD2761B775B48DB0");
        b.put("9a571aa113ad987d626c0457828962e6", "6970E5DA79F86F5D12FF4DC281C662029F6782B9D29E1EF5913F43B71CCE0D05B7ADE26E37C8A0D7DA070B078046CCFDA813DFEE6A4A611548B1F531E569238A");
        b.put("668319f11506def6208d6afe320dfd52", "EA36C39255025E5DB4FBD8257739C71641729A816259783B63AAA127EC6282E7D3DD0FA9A765C48EE43D5D885CC9CDFF");
        b.put("256b0f26bb2a9506be6cfdb84028ae08", "8A72631ECA335440D5349C39B2C8C26F04E53AF03DA9FF9B1F9A99AC018EB3E4B692A3B3E7C9FAA158B9C743F11C0277");
        return;
        b = new HashMap();
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      localThrowable.printStackTrace();
    }
  }
  
  /* Error */
  public String a(String paramString)
  {
    // Byte code:
    //   0: ldc_w 356
    //   3: invokestatic 361	javax/crypto/KeyGenerator:getInstance	(Ljava/lang/String;)Ljavax/crypto/KeyGenerator;
    //   6: astore_2
    //   7: aload_2
    //   8: ifnull +92 -> 100
    //   11: aload_2
    //   12: sipush 256
    //   15: invokevirtual 365	javax/crypto/KeyGenerator:init	(I)V
    //   18: aload_2
    //   19: invokevirtual 369	javax/crypto/KeyGenerator:generateKey	()Ljavax/crypto/SecretKey;
    //   22: invokeinterface 374 1 0
    //   27: astore_3
    //   28: aload_3
    //   29: getstatic 42	com/amap/api/location/core/c:g	Landroid/content/Context;
    //   32: invokestatic 377	com/amap/api/location/core/e:a	(Landroid/content/Context;)Ljava/security/PublicKey;
    //   35: invokestatic 380	com/amap/api/location/core/e:a	([BLjava/security/Key;)[B
    //   38: astore_2
    //   39: aload_3
    //   40: aload_0
    //   41: aload_1
    //   42: invokevirtual 382	com/amap/api/location/core/c:b	(Ljava/lang/String;)Ljava/lang/String;
    //   45: ldc_w 384
    //   48: invokevirtual 388	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   51: invokestatic 391	com/amap/api/location/core/e:a	([B[B)[B
    //   54: astore_3
    //   55: aload_2
    //   56: arraylength
    //   57: aload_3
    //   58: arraylength
    //   59: iadd
    //   60: newarray <illegal type>
    //   62: astore_1
    //   63: aload_2
    //   64: iconst_0
    //   65: aload_1
    //   66: iconst_0
    //   67: aload_2
    //   68: arraylength
    //   69: invokestatic 397	java/lang/System:arraycopy	(Ljava/lang/Object;ILjava/lang/Object;II)V
    //   72: aload_3
    //   73: iconst_0
    //   74: aload_1
    //   75: aload_2
    //   76: arraylength
    //   77: aload_3
    //   78: arraylength
    //   79: invokestatic 397	java/lang/System:arraycopy	(Ljava/lang/Object;ILjava/lang/Object;II)V
    //   82: aload_1
    //   83: invokestatic 399	com/aps/t:a	([B)[B
    //   86: invokestatic 404	com/aps/b:a	([B)Ljava/lang/String;
    //   89: areturn
    //   90: astore_2
    //   91: aload_2
    //   92: invokevirtual 275	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   95: aconst_null
    //   96: astore_2
    //   97: goto -90 -> 7
    //   100: ldc 44
    //   102: areturn
    //   103: astore_1
    //   104: aconst_null
    //   105: astore_1
    //   106: goto -24 -> 82
    //   109: astore_2
    //   110: goto -28 -> 82
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	113	0	this	c
    //   0	113	1	paramString	String
    //   6	70	2	localObject1	Object
    //   90	2	2	localNoSuchAlgorithmException	java.security.NoSuchAlgorithmException
    //   96	1	2	localObject2	Object
    //   109	1	2	localThrowable	Throwable
    //   27	51	3	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   0	7	90	java/security/NoSuchAlgorithmException
    //   28	63	103	java/lang/Throwable
    //   63	82	109	java/lang/Throwable
  }
  
  public String b(String paramString)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("ia=1&");
    if (a == null) {}
    for (;;)
    {
      localStringBuilder.append("ct=android");
      String str1 = h.getDeviceId();
      String str2 = h.getSubscriberId();
      localStringBuilder.append("&ime=");
      localStringBuilder.append(str1);
      localStringBuilder.append("&sim=");
      localStringBuilder.append(str2);
      localStringBuilder.append("&pkg=");
      localStringBuilder.append(j);
      localStringBuilder.append("&mod=");
      localStringBuilder.append(e());
      localStringBuilder.append("&sv=");
      localStringBuilder.append(d());
      localStringBuilder.append("&nt=");
      localStringBuilder.append(f());
      str1 = h.getNetworkOperatorName();
      localStringBuilder.append("&np=");
      localStringBuilder.append(str1);
      localStringBuilder.append("&ctm=");
      localStringBuilder.append(System.currentTimeMillis());
      localStringBuilder.append("&re=");
      localStringBuilder.append(l);
      localStringBuilder.append("&av=");
      localStringBuilder.append("V1.3.1");
      localStringBuilder.append("&apn=");
      localStringBuilder.append(m);
      localStringBuilder.append("&apv=");
      localStringBuilder.append(n);
      localStringBuilder.append("&pro=");
      localStringBuilder.append(paramString);
      return localStringBuilder.toString();
      if (a.length() > 0)
      {
        localStringBuilder.append("key=");
        localStringBuilder.append(a);
        localStringBuilder.append("&");
      }
    }
  }
  
  public String c()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("mod=");
    localStringBuilder.append(e());
    localStringBuilder.append("&sv=");
    localStringBuilder.append(d());
    localStringBuilder.append("&nt=");
    localStringBuilder.append(f());
    String str = h.getNetworkOperatorName();
    localStringBuilder.append("&np=");
    localStringBuilder.append(str);
    return localStringBuilder.toString();
  }
  
  public String f()
  {
    if (g.checkCallingOrSelfPermission("android.permission.ACCESS_NETWORK_STATE") == 0)
    {
      if (i != null)
      {
        NetworkInfo localNetworkInfo = i.getActiveNetworkInfo();
        if (localNetworkInfo == null) {
          break label40;
        }
        return localNetworkInfo.getTypeName();
      }
    }
    else {
      return "";
    }
    return "";
    label40:
    return "";
  }
  
  public String i()
  {
    StringBuffer localStringBuffer = new StringBuffer();
    localStringBuffer.append(k).append(j);
    return localStringBuffer.toString();
  }
}


/* Location:              /Users/joshua/Desktop/system_framework/classes-dex2jar.jar!/com/amap/api/location/core/c.class
 * Java compiler version: 6 (50.0)
 * JD-Core Version:       0.7.1
 */